[versions]
agp = "8.7.0"
javapoet = "1.13.0"
# kgp has to be kept in sync with kotlinCompilerExtension version. See https://developer.android.com/jetpack/androidx/releases/compose-kotlin for kotlin and compose compile version compatibility
kgp = "2.0.20"
ktlintComposeRuleset = "0.4.15"
ktlintGradlePlugin = "12.1.1"
dependencyGraphPlugin = "0.12"
dependencyUpdatePlugin = "0.51.0"
gmazzoJacocoReportAggregation = "2.2.1"
hilt = "2.52"
room = "2.6.1"
mockk = "1.13.12"
junit = "1.2.1"
jupiter = "5.11.2"
testRunner = "1.6.2"
archCoreTest = "2.2.0"
jetBrainsCoroutinesTest = "1.9.0"
composeBom = "2024.09.03"
composeNavigation = "2.8.2"
composeNavigationHilt = "1.2.0"
tvMaterial = "1.0.0"
# see https://developer.android.com/jetpack/androidx/releases/tv for releases announcements:
tvFoundation = "1.0.0-alpha11"

[libraries]
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kgp" }
# AndroidX:
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3" }
androidx-compose-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
androidx-compose-adaptive = { module = "androidx.compose.material3.adaptive:adaptive" }
androidx-compose-preview-debug = { module = "androidx.compose.ui:ui-tooling" }
androidx-compose-ui-test-debug = { module = "androidx.compose.ui:ui-test-manifest" }
androidx-tv-material = { module = "androidx.tv:tv-material", version.ref = "tvMaterial" }
androidx-tv-foundation = { module = "androidx.tv:tv-foundation", version.ref = "tvFoundation" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "composeNavigationHilt" }
junit = { module = "androidx.test.ext:junit", version.ref = "junit"}
test-runner = { module = "androidx.test:runner", version.ref = "testRunner"}
androidx-archcore-testing = { module = "androidx.arch.core:core-testing", version.ref = "archCoreTest"}
# Room
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
androidx-room-coroutines = { module = "androidx.room:room-ktx", version.ref = "room" }
androidx-room-testing = { module = "androidx.room:room-testing", version.ref = "room" }
# Hilt
dagger-hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt"}
dagger-hilt-android-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt"}
dagger-hilt-android-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt"}
dagger-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt"}
# Misc
javapoet = { module = "com.squareup:javapoet", version.ref = "javapoet" }
ktlint-compose-ruleset = { module = "io.nlopez.compose.rules:ktlint", version.ref = "ktlintComposeRuleset" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk"}
jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "jupiter"}
jetbrains-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "jetBrainsCoroutinesTest"}

[plugins]
dagger-hilt-android = { id = "com.google.dagger.hilt.android", version.ref = "hilt"}
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kgp"}
# add-ons
ktlint-gradle = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlintGradlePlugin"}
dependencygraph = { id = "com.savvasdalkitsis.module-dependency-graph", version.ref = "dependencyGraphPlugin"}
dependencyupdate = { id ="com.github.ben-manes.versions", version.ref = "dependencyUpdatePlugin"}
gmazzo-jacoco-test-coverage = { id = "io.github.gmazzo.test.aggregation.coverage",  version.ref = "gmazzoJacocoReportAggregation"}
gmazzo-jacoco-test-results = { id = "io.github.gmazzo.test.aggregation.results",  version.ref = "gmazzoJacocoReportAggregation"}
